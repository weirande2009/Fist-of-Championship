// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: GameClientToServer.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace ChampionFistGame {

  /// <summary>Holder for reflection information generated from GameClientToServer.proto</summary>
  public static partial class GameClientToServerReflection {

    #region Descriptor
    /// <summary>File descriptor for GameClientToServer.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static GameClientToServerReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChhHYW1lQ2xpZW50VG9TZXJ2ZXIucHJvdG8SEENoYW1waW9uRmlzdEdhbWUi",
            "PwoJQ19Db25uZWN0EgwKBG5hbWUYASABKAkSDwoHc2VhdF9ubxgCIAEoBRIT",
            "CgtjaGFtcGlvbl9ubxgDIAEoBSKzAgoOT3BlcmF0aW9uRnJhbWUSDwoHY2xp",
            "Y2tfcRgBIAEoCBIPCgdjbGlja193GAIgASgIEg8KB2NsaWNrX2UYAyABKAgS",
            "DwoHY2xpY2tfchgEIAEoCBIWCg5jbGlja19wcm9wZXJ0eRgFIAEoCBITCgtj",
            "bGlja19tb3VzZRgGIAEoCBIVCg1jaGFuZ2Vfd2VhcG9uGAcgASgIEhQKDGNo",
            "YW5nZV9hcm1vchgIIAEoCBITCgttb3VzZV9wb3NfeBgJIAEoBRITCgttb3Vz",
            "ZV9wb3NfeRgKIAEoBRIQCghhcm1vcl9ubxgLIAEoBRIVCg1sb3dfd2VhcG9u",
            "X25vGAwgASgFEhgKEG1pZGRsZV93ZWFwb25fbm8YDSABKAUSFgoOaGlnaF93",
            "ZWFwb25fbm8YDiABKAUiXQoNQ19QbGF5ZXJGcmFtZRIQCghmcmFtZV9pZBgB",
            "IAEoBRI6ChBwbGF5ZXJfb3B0X2ZyYW1lGAIgASgLMiAuQ2hhbXBpb25GaXN0",
            "R2FtZS5PcGVyYXRpb25GcmFtZSpoChFDbGllbnRDb21tYW5kVHlwZRILCgdD",
            "X0VNUFRZEAASDQoJQ19DT05ORUNUEAESCgoGQ19MT0FEEAISCgoGQ19FWElU",
            "EAMSEgoOQ19QTEFZRVJfRlJBTUUQBBILCgdDX0RFTEFZEAViBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::ChampionFistGame.ClientCommandType), }, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::ChampionFistGame.C_Connect), global::ChampionFistGame.C_Connect.Parser, new[]{ "Name", "SeatNo", "ChampionNo" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ChampionFistGame.OperationFrame), global::ChampionFistGame.OperationFrame.Parser, new[]{ "ClickQ", "ClickW", "ClickE", "ClickR", "ClickProperty", "ClickMouse", "ChangeWeapon", "ChangeArmor", "MousePosX", "MousePosY", "ArmorNo", "LowWeaponNo", "MiddleWeaponNo", "HighWeaponNo" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ChampionFistGame.C_PlayerFrame), global::ChampionFistGame.C_PlayerFrame.Parser, new[]{ "FrameId", "PlayerOptFrame" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  public enum ClientCommandType {
    [pbr::OriginalName("C_EMPTY")] CEmpty = 0,
    [pbr::OriginalName("C_CONNECT")] CConnect = 1,
    [pbr::OriginalName("C_LOAD")] CLoad = 2,
    [pbr::OriginalName("C_EXIT")] CExit = 3,
    [pbr::OriginalName("C_PLAYER_FRAME")] CPlayerFrame = 4,
    [pbr::OriginalName("C_DELAY")] CDelay = 5,
  }

  #endregion

  #region Messages
  public sealed partial class C_Connect : pb::IMessage<C_Connect>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<C_Connect> _parser = new pb::MessageParser<C_Connect>(() => new C_Connect());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<C_Connect> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ChampionFistGame.GameClientToServerReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public C_Connect() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public C_Connect(C_Connect other) : this() {
      name_ = other.name_;
      seatNo_ = other.seatNo_;
      championNo_ = other.championNo_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public C_Connect Clone() {
      return new C_Connect(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    /// <summary>
    /// player name
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "seat_no" field.</summary>
    public const int SeatNoFieldNumber = 2;
    private int seatNo_;
    /// <summary>
    /// seat no
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int SeatNo {
      get { return seatNo_; }
      set {
        seatNo_ = value;
      }
    }

    /// <summary>Field number for the "champion_no" field.</summary>
    public const int ChampionNoFieldNumber = 3;
    private int championNo_;
    /// <summary>
    /// champion no
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int ChampionNo {
      get { return championNo_; }
      set {
        championNo_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as C_Connect);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(C_Connect other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (SeatNo != other.SeatNo) return false;
      if (ChampionNo != other.ChampionNo) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (SeatNo != 0) hash ^= SeatNo.GetHashCode();
      if (ChampionNo != 0) hash ^= ChampionNo.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (SeatNo != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(SeatNo);
      }
      if (ChampionNo != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(ChampionNo);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (SeatNo != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(SeatNo);
      }
      if (ChampionNo != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(ChampionNo);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (SeatNo != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SeatNo);
      }
      if (ChampionNo != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ChampionNo);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(C_Connect other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.SeatNo != 0) {
        SeatNo = other.SeatNo;
      }
      if (other.ChampionNo != 0) {
        ChampionNo = other.ChampionNo;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 16: {
            SeatNo = input.ReadInt32();
            break;
          }
          case 24: {
            ChampionNo = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 16: {
            SeatNo = input.ReadInt32();
            break;
          }
          case 24: {
            ChampionNo = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class OperationFrame : pb::IMessage<OperationFrame>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<OperationFrame> _parser = new pb::MessageParser<OperationFrame>(() => new OperationFrame());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<OperationFrame> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ChampionFistGame.GameClientToServerReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public OperationFrame() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public OperationFrame(OperationFrame other) : this() {
      clickQ_ = other.clickQ_;
      clickW_ = other.clickW_;
      clickE_ = other.clickE_;
      clickR_ = other.clickR_;
      clickProperty_ = other.clickProperty_;
      clickMouse_ = other.clickMouse_;
      changeWeapon_ = other.changeWeapon_;
      changeArmor_ = other.changeArmor_;
      mousePosX_ = other.mousePosX_;
      mousePosY_ = other.mousePosY_;
      armorNo_ = other.armorNo_;
      lowWeaponNo_ = other.lowWeaponNo_;
      middleWeaponNo_ = other.middleWeaponNo_;
      highWeaponNo_ = other.highWeaponNo_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public OperationFrame Clone() {
      return new OperationFrame(this);
    }

    /// <summary>Field number for the "click_q" field.</summary>
    public const int ClickQFieldNumber = 1;
    private bool clickQ_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool ClickQ {
      get { return clickQ_; }
      set {
        clickQ_ = value;
      }
    }

    /// <summary>Field number for the "click_w" field.</summary>
    public const int ClickWFieldNumber = 2;
    private bool clickW_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool ClickW {
      get { return clickW_; }
      set {
        clickW_ = value;
      }
    }

    /// <summary>Field number for the "click_e" field.</summary>
    public const int ClickEFieldNumber = 3;
    private bool clickE_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool ClickE {
      get { return clickE_; }
      set {
        clickE_ = value;
      }
    }

    /// <summary>Field number for the "click_r" field.</summary>
    public const int ClickRFieldNumber = 4;
    private bool clickR_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool ClickR {
      get { return clickR_; }
      set {
        clickR_ = value;
      }
    }

    /// <summary>Field number for the "click_property" field.</summary>
    public const int ClickPropertyFieldNumber = 5;
    private bool clickProperty_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool ClickProperty {
      get { return clickProperty_; }
      set {
        clickProperty_ = value;
      }
    }

    /// <summary>Field number for the "click_mouse" field.</summary>
    public const int ClickMouseFieldNumber = 6;
    private bool clickMouse_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool ClickMouse {
      get { return clickMouse_; }
      set {
        clickMouse_ = value;
      }
    }

    /// <summary>Field number for the "change_weapon" field.</summary>
    public const int ChangeWeaponFieldNumber = 7;
    private bool changeWeapon_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool ChangeWeapon {
      get { return changeWeapon_; }
      set {
        changeWeapon_ = value;
      }
    }

    /// <summary>Field number for the "change_armor" field.</summary>
    public const int ChangeArmorFieldNumber = 8;
    private bool changeArmor_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool ChangeArmor {
      get { return changeArmor_; }
      set {
        changeArmor_ = value;
      }
    }

    /// <summary>Field number for the "mouse_pos_x" field.</summary>
    public const int MousePosXFieldNumber = 9;
    private int mousePosX_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int MousePosX {
      get { return mousePosX_; }
      set {
        mousePosX_ = value;
      }
    }

    /// <summary>Field number for the "mouse_pos_y" field.</summary>
    public const int MousePosYFieldNumber = 10;
    private int mousePosY_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int MousePosY {
      get { return mousePosY_; }
      set {
        mousePosY_ = value;
      }
    }

    /// <summary>Field number for the "armor_no" field.</summary>
    public const int ArmorNoFieldNumber = 11;
    private int armorNo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int ArmorNo {
      get { return armorNo_; }
      set {
        armorNo_ = value;
      }
    }

    /// <summary>Field number for the "low_weapon_no" field.</summary>
    public const int LowWeaponNoFieldNumber = 12;
    private int lowWeaponNo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int LowWeaponNo {
      get { return lowWeaponNo_; }
      set {
        lowWeaponNo_ = value;
      }
    }

    /// <summary>Field number for the "middle_weapon_no" field.</summary>
    public const int MiddleWeaponNoFieldNumber = 13;
    private int middleWeaponNo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int MiddleWeaponNo {
      get { return middleWeaponNo_; }
      set {
        middleWeaponNo_ = value;
      }
    }

    /// <summary>Field number for the "high_weapon_no" field.</summary>
    public const int HighWeaponNoFieldNumber = 14;
    private int highWeaponNo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int HighWeaponNo {
      get { return highWeaponNo_; }
      set {
        highWeaponNo_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as OperationFrame);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(OperationFrame other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ClickQ != other.ClickQ) return false;
      if (ClickW != other.ClickW) return false;
      if (ClickE != other.ClickE) return false;
      if (ClickR != other.ClickR) return false;
      if (ClickProperty != other.ClickProperty) return false;
      if (ClickMouse != other.ClickMouse) return false;
      if (ChangeWeapon != other.ChangeWeapon) return false;
      if (ChangeArmor != other.ChangeArmor) return false;
      if (MousePosX != other.MousePosX) return false;
      if (MousePosY != other.MousePosY) return false;
      if (ArmorNo != other.ArmorNo) return false;
      if (LowWeaponNo != other.LowWeaponNo) return false;
      if (MiddleWeaponNo != other.MiddleWeaponNo) return false;
      if (HighWeaponNo != other.HighWeaponNo) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (ClickQ != false) hash ^= ClickQ.GetHashCode();
      if (ClickW != false) hash ^= ClickW.GetHashCode();
      if (ClickE != false) hash ^= ClickE.GetHashCode();
      if (ClickR != false) hash ^= ClickR.GetHashCode();
      if (ClickProperty != false) hash ^= ClickProperty.GetHashCode();
      if (ClickMouse != false) hash ^= ClickMouse.GetHashCode();
      if (ChangeWeapon != false) hash ^= ChangeWeapon.GetHashCode();
      if (ChangeArmor != false) hash ^= ChangeArmor.GetHashCode();
      if (MousePosX != 0) hash ^= MousePosX.GetHashCode();
      if (MousePosY != 0) hash ^= MousePosY.GetHashCode();
      if (ArmorNo != 0) hash ^= ArmorNo.GetHashCode();
      if (LowWeaponNo != 0) hash ^= LowWeaponNo.GetHashCode();
      if (MiddleWeaponNo != 0) hash ^= MiddleWeaponNo.GetHashCode();
      if (HighWeaponNo != 0) hash ^= HighWeaponNo.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (ClickQ != false) {
        output.WriteRawTag(8);
        output.WriteBool(ClickQ);
      }
      if (ClickW != false) {
        output.WriteRawTag(16);
        output.WriteBool(ClickW);
      }
      if (ClickE != false) {
        output.WriteRawTag(24);
        output.WriteBool(ClickE);
      }
      if (ClickR != false) {
        output.WriteRawTag(32);
        output.WriteBool(ClickR);
      }
      if (ClickProperty != false) {
        output.WriteRawTag(40);
        output.WriteBool(ClickProperty);
      }
      if (ClickMouse != false) {
        output.WriteRawTag(48);
        output.WriteBool(ClickMouse);
      }
      if (ChangeWeapon != false) {
        output.WriteRawTag(56);
        output.WriteBool(ChangeWeapon);
      }
      if (ChangeArmor != false) {
        output.WriteRawTag(64);
        output.WriteBool(ChangeArmor);
      }
      if (MousePosX != 0) {
        output.WriteRawTag(72);
        output.WriteInt32(MousePosX);
      }
      if (MousePosY != 0) {
        output.WriteRawTag(80);
        output.WriteInt32(MousePosY);
      }
      if (ArmorNo != 0) {
        output.WriteRawTag(88);
        output.WriteInt32(ArmorNo);
      }
      if (LowWeaponNo != 0) {
        output.WriteRawTag(96);
        output.WriteInt32(LowWeaponNo);
      }
      if (MiddleWeaponNo != 0) {
        output.WriteRawTag(104);
        output.WriteInt32(MiddleWeaponNo);
      }
      if (HighWeaponNo != 0) {
        output.WriteRawTag(112);
        output.WriteInt32(HighWeaponNo);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (ClickQ != false) {
        output.WriteRawTag(8);
        output.WriteBool(ClickQ);
      }
      if (ClickW != false) {
        output.WriteRawTag(16);
        output.WriteBool(ClickW);
      }
      if (ClickE != false) {
        output.WriteRawTag(24);
        output.WriteBool(ClickE);
      }
      if (ClickR != false) {
        output.WriteRawTag(32);
        output.WriteBool(ClickR);
      }
      if (ClickProperty != false) {
        output.WriteRawTag(40);
        output.WriteBool(ClickProperty);
      }
      if (ClickMouse != false) {
        output.WriteRawTag(48);
        output.WriteBool(ClickMouse);
      }
      if (ChangeWeapon != false) {
        output.WriteRawTag(56);
        output.WriteBool(ChangeWeapon);
      }
      if (ChangeArmor != false) {
        output.WriteRawTag(64);
        output.WriteBool(ChangeArmor);
      }
      if (MousePosX != 0) {
        output.WriteRawTag(72);
        output.WriteInt32(MousePosX);
      }
      if (MousePosY != 0) {
        output.WriteRawTag(80);
        output.WriteInt32(MousePosY);
      }
      if (ArmorNo != 0) {
        output.WriteRawTag(88);
        output.WriteInt32(ArmorNo);
      }
      if (LowWeaponNo != 0) {
        output.WriteRawTag(96);
        output.WriteInt32(LowWeaponNo);
      }
      if (MiddleWeaponNo != 0) {
        output.WriteRawTag(104);
        output.WriteInt32(MiddleWeaponNo);
      }
      if (HighWeaponNo != 0) {
        output.WriteRawTag(112);
        output.WriteInt32(HighWeaponNo);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (ClickQ != false) {
        size += 1 + 1;
      }
      if (ClickW != false) {
        size += 1 + 1;
      }
      if (ClickE != false) {
        size += 1 + 1;
      }
      if (ClickR != false) {
        size += 1 + 1;
      }
      if (ClickProperty != false) {
        size += 1 + 1;
      }
      if (ClickMouse != false) {
        size += 1 + 1;
      }
      if (ChangeWeapon != false) {
        size += 1 + 1;
      }
      if (ChangeArmor != false) {
        size += 1 + 1;
      }
      if (MousePosX != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MousePosX);
      }
      if (MousePosY != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MousePosY);
      }
      if (ArmorNo != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ArmorNo);
      }
      if (LowWeaponNo != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(LowWeaponNo);
      }
      if (MiddleWeaponNo != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MiddleWeaponNo);
      }
      if (HighWeaponNo != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(HighWeaponNo);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(OperationFrame other) {
      if (other == null) {
        return;
      }
      if (other.ClickQ != false) {
        ClickQ = other.ClickQ;
      }
      if (other.ClickW != false) {
        ClickW = other.ClickW;
      }
      if (other.ClickE != false) {
        ClickE = other.ClickE;
      }
      if (other.ClickR != false) {
        ClickR = other.ClickR;
      }
      if (other.ClickProperty != false) {
        ClickProperty = other.ClickProperty;
      }
      if (other.ClickMouse != false) {
        ClickMouse = other.ClickMouse;
      }
      if (other.ChangeWeapon != false) {
        ChangeWeapon = other.ChangeWeapon;
      }
      if (other.ChangeArmor != false) {
        ChangeArmor = other.ChangeArmor;
      }
      if (other.MousePosX != 0) {
        MousePosX = other.MousePosX;
      }
      if (other.MousePosY != 0) {
        MousePosY = other.MousePosY;
      }
      if (other.ArmorNo != 0) {
        ArmorNo = other.ArmorNo;
      }
      if (other.LowWeaponNo != 0) {
        LowWeaponNo = other.LowWeaponNo;
      }
      if (other.MiddleWeaponNo != 0) {
        MiddleWeaponNo = other.MiddleWeaponNo;
      }
      if (other.HighWeaponNo != 0) {
        HighWeaponNo = other.HighWeaponNo;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ClickQ = input.ReadBool();
            break;
          }
          case 16: {
            ClickW = input.ReadBool();
            break;
          }
          case 24: {
            ClickE = input.ReadBool();
            break;
          }
          case 32: {
            ClickR = input.ReadBool();
            break;
          }
          case 40: {
            ClickProperty = input.ReadBool();
            break;
          }
          case 48: {
            ClickMouse = input.ReadBool();
            break;
          }
          case 56: {
            ChangeWeapon = input.ReadBool();
            break;
          }
          case 64: {
            ChangeArmor = input.ReadBool();
            break;
          }
          case 72: {
            MousePosX = input.ReadInt32();
            break;
          }
          case 80: {
            MousePosY = input.ReadInt32();
            break;
          }
          case 88: {
            ArmorNo = input.ReadInt32();
            break;
          }
          case 96: {
            LowWeaponNo = input.ReadInt32();
            break;
          }
          case 104: {
            MiddleWeaponNo = input.ReadInt32();
            break;
          }
          case 112: {
            HighWeaponNo = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            ClickQ = input.ReadBool();
            break;
          }
          case 16: {
            ClickW = input.ReadBool();
            break;
          }
          case 24: {
            ClickE = input.ReadBool();
            break;
          }
          case 32: {
            ClickR = input.ReadBool();
            break;
          }
          case 40: {
            ClickProperty = input.ReadBool();
            break;
          }
          case 48: {
            ClickMouse = input.ReadBool();
            break;
          }
          case 56: {
            ChangeWeapon = input.ReadBool();
            break;
          }
          case 64: {
            ChangeArmor = input.ReadBool();
            break;
          }
          case 72: {
            MousePosX = input.ReadInt32();
            break;
          }
          case 80: {
            MousePosY = input.ReadInt32();
            break;
          }
          case 88: {
            ArmorNo = input.ReadInt32();
            break;
          }
          case 96: {
            LowWeaponNo = input.ReadInt32();
            break;
          }
          case 104: {
            MiddleWeaponNo = input.ReadInt32();
            break;
          }
          case 112: {
            HighWeaponNo = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class C_PlayerFrame : pb::IMessage<C_PlayerFrame>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<C_PlayerFrame> _parser = new pb::MessageParser<C_PlayerFrame>(() => new C_PlayerFrame());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<C_PlayerFrame> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ChampionFistGame.GameClientToServerReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public C_PlayerFrame() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public C_PlayerFrame(C_PlayerFrame other) : this() {
      frameId_ = other.frameId_;
      playerOptFrame_ = other.playerOptFrame_ != null ? other.playerOptFrame_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public C_PlayerFrame Clone() {
      return new C_PlayerFrame(this);
    }

    /// <summary>Field number for the "frame_id" field.</summary>
    public const int FrameIdFieldNumber = 1;
    private int frameId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int FrameId {
      get { return frameId_; }
      set {
        frameId_ = value;
      }
    }

    /// <summary>Field number for the "player_opt_frame" field.</summary>
    public const int PlayerOptFrameFieldNumber = 2;
    private global::ChampionFistGame.OperationFrame playerOptFrame_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::ChampionFistGame.OperationFrame PlayerOptFrame {
      get { return playerOptFrame_; }
      set {
        playerOptFrame_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as C_PlayerFrame);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(C_PlayerFrame other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (FrameId != other.FrameId) return false;
      if (!object.Equals(PlayerOptFrame, other.PlayerOptFrame)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (FrameId != 0) hash ^= FrameId.GetHashCode();
      if (playerOptFrame_ != null) hash ^= PlayerOptFrame.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (FrameId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(FrameId);
      }
      if (playerOptFrame_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(PlayerOptFrame);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (FrameId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(FrameId);
      }
      if (playerOptFrame_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(PlayerOptFrame);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (FrameId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(FrameId);
      }
      if (playerOptFrame_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PlayerOptFrame);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(C_PlayerFrame other) {
      if (other == null) {
        return;
      }
      if (other.FrameId != 0) {
        FrameId = other.FrameId;
      }
      if (other.playerOptFrame_ != null) {
        if (playerOptFrame_ == null) {
          PlayerOptFrame = new global::ChampionFistGame.OperationFrame();
        }
        PlayerOptFrame.MergeFrom(other.PlayerOptFrame);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            FrameId = input.ReadInt32();
            break;
          }
          case 18: {
            if (playerOptFrame_ == null) {
              PlayerOptFrame = new global::ChampionFistGame.OperationFrame();
            }
            input.ReadMessage(PlayerOptFrame);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            FrameId = input.ReadInt32();
            break;
          }
          case 18: {
            if (playerOptFrame_ == null) {
              PlayerOptFrame = new global::ChampionFistGame.OperationFrame();
            }
            input.ReadMessage(PlayerOptFrame);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
